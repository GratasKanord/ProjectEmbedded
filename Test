const int LED_START = 5;
const int LED_RIGHT = 18;
const int LED_LEFT = 19;

const int BUTTTON_RIGHT_PIN = 34;
const int BUTTTON_LEFT_PIN = 35;

int state = 1;

unsigned long button_time = 0;  
unsigned long last_button_time = 0;

struct Button {
	const uint8_t PIN;
	bool pressed;
};

Button buttonRight = {BUTTTON_RIGHT_PIN, false};
Button buttonLeft = {BUTTTON_LEFT_PIN, false};

void IRAM_ATTR isrRight() {
  button_time = millis();
  if (button_time - last_button_time > 150)
  {
    buttonRight.pressed = true;

    if(state == 3){
      state = 1;
    } else{
      state = state + 1;
    }
    
    manageLights(); 
    
    last_button_time = button_time;
  }
}

void IRAM_ATTR isrLeft() {
  button_time = millis();
  if (button_time - last_button_time > 150)
  {
    buttonLeft.pressed = true;
    if(state == 3){
      state = 1;
    } else state++;
    
    manageLights();   
    last_button_time = button_time;
  }
}

void manageLights(){

  switch(state){
    case 1:
      digitalWrite(LED_START, LOW);
      // digitalWrite(LED_RIGHT, LOW);
      // digitalWrite(LED_LEFT, LOW);
      
    case 2:
      digitalWrite(LED_START, HIGH);
      // digitalWrite(LED_RIGHT, LOW);
      // digitalWrite(LED_LEFT, LOW); 
        
    // case 2:
    //   digitalWrite(LED_START, LOW);
    //   if(buttonRight.pressed){
    //     digitalWrite(LED_RIGHT, HIGH);        
    //   }
    //   else if(buttonLeft.pressed){
    //     digitalWrite(LED_LEFT, HIGH); 
    //   }      
  }
  
  buttonRight.pressed = false;
  buttonLeft.pressed = false;
}

void setup() {
  Serial.begin(115200);
  pinMode(LED_START, OUTPUT);
  pinMode(LED_RIGHT, OUTPUT);
  pinMode(LED_LEFT, OUTPUT);

  attachInterrupt(buttonRight.PIN, isrRight, FALLING);  
  attachInterrupt(buttonLeft.PIN, isrLeft, FALLING);   
  
}

void loop() {
  Serial.println(state);

}
